name: EA Plan v6.x Auto Deploy

on:
  push:
    branches:
      - main
      - sprint/**
      - feature/**
    paths:
      - 'ops/**'
      - 'deploy/**'
      - 'finbot/**'
      - 'mubot/**'
      - '.github/workflows/ea-plan-v6-auto-deploy.yml'
  workflow_dispatch:
    inputs:
      phase:
        description: 'Pipeline phase to execute'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - init
          - predictive
          - drift
          - adaptive
          - autoscaling
          - healing
          - security
          - optimization
          - go-live
          - finbot-mubot
          - monitoring
          - inspect
          - validation
          - audit
          - maintenance
  schedule:
    # Daily maintenance at 2 AM UTC
    - cron: '0 2 * * *'

env:
  KUBERNETES_VERSION: '1.28.0'
  NAMESPACE_WEB: 'ea-web'
  NAMESPACE_MONITORING: 'monitoring'
  NAMESPACE_AIOPS: 'aiops'

jobs:
  auto-deploy:
    name: EA Plan v6.x Auto Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBERNETES_VERSION }}
      
      - name: 🔐 Configure Kubernetes
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      
      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🔑 Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🏗️ Build FinBot Image
        if: contains(github.event.head_commit.message, 'finbot') || contains(github.event.head_commit.message, '[deploy]')
        uses: docker/build-push-action@v5
        with:
          context: ./finbot
          push: true
          tags: ghcr.io/cptsystems/finbot:latest,ghcr.io/cptsystems/finbot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: 🏗️ Build MuBot Image
        if: contains(github.event.head_commit.message, 'mubot') || contains(github.event.head_commit.message, '[deploy]')
        uses: docker/build-push-action@v5
        with:
          context: ./mubot
          push: true
          tags: ghcr.io/cptsystems/mubot:latest,ghcr.io/cptsystems/mubot:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: 🚀 Run Pipeline
        run: |
          chmod +x ops/ea-plan-v6-pipeline.sh
          export PHASE="${{ github.event.inputs.phase || 'all' }}"
          export SKIP_ERRORS=true
          bash ops/ea-plan-v6-pipeline.sh
      
      - name: 📊 Deployment Status
        run: |
          echo "=== Pod Status ==="
          kubectl get pods -A --no-headers | grep -E "Running|Pending|CrashLoopBackOff" || true
          
          echo ""
          echo "=== FinBot/MuBot Status ==="
          kubectl get pods -n ${{ env.NAMESPACE_AIOPS }} -l 'app in (finbot,mubot)' || true
          
          echo ""
          echo "=== Monitoring Stack ==="
          kubectl get pods -n ${{ env.NAMESPACE_MONITORING }} -l 'app in (prometheus,grafana)' || true
      
      - name: ✅ Health Check
        run: |
          echo "=== Health Check ==="
          
          # Check FinBot
          FINBOT_POD=$(kubectl get pods -n ${{ env.NAMESPACE_AIOPS }} -l app=finbot --no-headers -o name 2>/dev/null | head -1)
          if [ -n "$FINBOT_POD" ]; then
            kubectl exec $FINBOT_POD -n ${{ env.NAMESPACE_AIOPS }} -- \
              python3 -c "import requests; r=requests.get('http://localhost:8080/health'); print('FinBot:', r.status_code)" 2>/dev/null || echo "FinBot health check failed"
          fi
          
          # Check MuBot
          MUBOT_POD=$(kubectl get pods -n ${{ env.NAMESPACE_AIOPS }} -l app=mubot --no-headers -o name 2>/dev/null | head -1)
          if [ -n "$MUBOT_POD" ]; then
            kubectl exec $MUBOT_POD -n ${{ env.NAMESPACE_AIOPS }} -- \
              python3 -c "import requests; r=requests.get('http://localhost:8081/health'); print('MuBot:', r.status_code)" 2>/dev/null || echo "MuBot health check failed"
          fi
      
      - name: 📤 Update Pipeline Status
        if: always()
        run: |
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          kubectl patch configmap ea-plan-v6-pipeline -n ${{ env.NAMESPACE_WEB }} \
            --type merge -p "{\"data\":{\"lastDeploy\":\"$TIMESTAMP\",\"status\":\"${{ job.status }}\",\"githubRun\":\"${{ github.run_id }}\"}}" || true
      
      - name: 📨 Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'EA Plan v6.x deployment failed'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

