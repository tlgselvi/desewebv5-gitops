name: üìö Documentation Validation & Sync

on:
  push:
    branches: 
      - main
      - 'sprint/**'
      - 'feature/**'
    paths:
      - 'ops/**'
      - 'docs/**'
      - 'CICD_GUIDE.md'
      - 'README.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - main
      - 'sprint/**'
    paths:
      - 'ops/**'
      - 'docs/**'
      - 'CICD_GUIDE.md'
  workflow_dispatch:
    inputs:
      validate_only:
        description: 'Validate only (no sync)'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  actions: read

jobs:
  validate-docs:
    name: ‚úÖ Validate Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üìã Check Documentation Links
        run: |
          echo "üîç Checking documentation files..."
          
          # Check if kubectl troubleshooting guide exists
          if [ -f "ops/KUBECTL_TROUBLESHOOTING.md" ]; then
            echo "‚úÖ ops/KUBECTL_TROUBLESHOOTING.md found"
          else
            echo "‚ùå ops/KUBECTL_TROUBLESHOOTING.md missing"
            exit 1
          fi
          
          # Check if validation guide exists
          if [ -f "ops/README_VALIDATION.md" ]; then
            echo "‚úÖ ops/README_VALIDATION.md found"
          else
            echo "‚ùå ops/README_VALIDATION.md missing"
            exit 1
          fi
          
          # Check if CI/CD guide references troubleshooting
          if grep -q "KUBECTL_TROUBLESHOOTING" CICD_GUIDE.md; then
            echo "‚úÖ CICD_GUIDE.md references troubleshooting guide"
          else
            echo "‚ö†Ô∏è  CICD_GUIDE.md may not reference troubleshooting guide"
          fi

      - name: üîó Validate Markdown Links
        run: |
          echo "üîó Validating internal markdown links..."
          # Basic validation - check for common link issues
          find ops docs -name "*.md" -type f 2>/dev/null | while read file; do
            echo "Checking: $file"
            # Check for broken relative links (basic validation)
            if grep -qE '\[.*\]\(\.\.\/.*\.md\)' "$file" 2>/dev/null; then
              echo "  Found relative links in $file"
            fi
          done || true

      - name: üìä Documentation Summary
        run: |
          echo "üìä Documentation Summary:"
          echo "---"
          echo "üìÅ ops/ directory:"
          find ops -name "*.md" -type f | sort | head -10
          echo ""
          echo "üìÅ docs/ directory:"
          find docs -name "*.md" -type f 2>/dev/null | sort | head -10 || echo "No docs/ directory found"
          echo ""
          echo "üìÑ Standalone docs:"
          ls -1 *.md 2>/dev/null | head -10 || echo "No standalone markdown files"

  notify-on-change:
    name: üì¢ Documentation Change Notification
    runs-on: ubuntu-latest
    needs: validate-docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîç Detect Changed Documentation
        id: changed-docs
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep -E '\.(md|yml)$' || true)
          echo "changed_files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "üìö Documentation files changed:"
            echo "$CHANGED_FILES"
          fi

      - name: üì® Notify (Optional)
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          if [ -n "$SLACK_WEBHOOK" ]; then
            CHANGED=$(echo '${{ steps.changed-docs.outputs.changed_files }}' | head -5)
            curl -X POST -H 'Content-type: application/json' \
              --data "{\"text\":\"üìö Documentation updated:\n\`\`\`$CHANGED\`\`\`\"}" \
              "$SLACK_WEBHOOK" || echo "Slack notification skipped"
          else
            echo "Slack webhook not configured, skipping notification"
          fi
