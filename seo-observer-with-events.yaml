apiVersion: apps/v1
kind: Deployment
metadata:
  name: seo-observer
  namespace: production
  labels:
    app: seo-observer
    environment: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seo-observer
  template:
    metadata:
      labels:
        app: seo-observer
        environment: production
    spec:
      containers:
        - name: event-generator
          image: node:18-alpine
          command:
            - sh
            - -c
            - |
              echo "AIOps event generator starting..."
              while true; do
                node -e "
                  const http = require('http');
                  const value = Math.floor(Math.random() * 10) + 1;
                  const data = JSON.stringify({event: 'rank-drift', value: value, threshold: 5});
                  const options = {
                    hostname: 'aioops-event-listener.production.svc.cluster.local',
                    port: 8080,
                    path: '/event',
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                      'Content-Length': data.length
                    }
                  };
                  const req = http.request(options, (res) => {
                    console.log('Event sent:', value, 'Status:', res.statusCode);
                  });
                  req.on('error', (e) => console.log('Error:', e.message));
                  req.write(data);
                  req.end();
                "
                sleep 60
              done
        - name: seo-observer
          image: node:18-alpine
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          command: ["/bin/sh"]
          args:
            - -c
            - |
              npm install -g lighthouse
              echo "SEO Observer started - Lighthouse available"
              while true; do
                echo "SEO Observer running - $(date)"
                sleep 30
              done
          envFrom:
          - configMapRef:
              name: seo-observer-config
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
