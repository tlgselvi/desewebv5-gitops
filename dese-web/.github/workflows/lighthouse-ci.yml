name: Lighthouse CI Performance Regression Tests

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      url:
        description: 'URL to test'
        required: false
        default: 'http://localhost:3000'
        type: string

env:
  LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

jobs:
  lighthouse-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd dese-web
          npm ci

      - name: Build application
        run: |
          cd dese-web
          npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Start application
        run: |
          cd dese-web
          npm start &
          sleep 10
        env:
          NODE_ENV: production

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './dese-web/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Performance Threshold Check
        run: |
          cd dese-web
          npx lighthouse-ci autorun --config=./lighthouserc.json --collect.url="${{ github.event.inputs.url || 'http://localhost:3000' }}"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Generate Weekly Performance Summary
        if: github.event_name == 'schedule'
        run: |
          cd dese-web
          mkdir -p reports/releases/v5.8.0
          echo "# Weekly Performance Summary - $(date)" > reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "## Lighthouse CI Results" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Performance: $(cat .lighthouseci/assertion-results.json | jq -r '.performance // "N/A"')" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Accessibility: $(cat .lighthouseci/assertion-results.json | jq -r '.accessibility // "N/A"')" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Best Practices: $(cat .lighthouseci/assertion-results.json | jq -r '.["best-practices"] // "N/A"')" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- SEO: $(cat .lighthouseci/assertion-results.json | jq -r '.seo // "N/A"')" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "## AIOps Feedback Loop Status" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Drift Detection: Active" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Optimization Suggestions: Enabled" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md
          echo "- Threshold: >10% performance drift triggers alerts" >> reports/releases/v5.8.0/weekly-summary-$(date +%Y-%m-%d).md

      - name: Send Performance Summary to Grafana
        if: github.event_name == 'schedule'
        run: |
          cd dese-web
          curl -X POST "${{ secrets.GRAFANA_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "dashboard": "Perf Overview",
              "panel": "Weekly Summary",
              "time": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'",
              "performance": "'$(cat .lighthouseci/assertion-results.json | jq -r '.performance // "N/A"')'",
              "accessibility": "'$(cat .lighthouseci/assertion-results.json | jq -r '.accessibility // "N/A"')'",
              "best_practices": "'$(cat .lighthouseci/assertion-results.json | jq -r '.["best-practices"] // "N/A"')'",
              "seo": "'$(cat .lighthouseci/assertion-results.json | jq -r '.seo // "N/A"')'",
              "status": "'$(if [ $(cat .lighthouseci/assertion-results.json | jq -r '.performance') -ge 90 ]; then echo "PASS"; else echo "FAIL"; fi)'"
            }' || echo "Grafana webhook not configured"

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const results = JSON.parse(fs.readFileSync('./dese-web/.lighthouseci/assertion-results.json', 'utf8'));
              const comment = `## 🚀 Lighthouse Performance Report
              
              | Metric | Score | Threshold | Status |
              |--------|-------|-----------|--------|
              | Performance | ${results.performance} | ≥ 90 | ${results.performance >= 90 ? '✅' : '❌'} |
              | Accessibility | ${results.accessibility} | ≥ 95 | ${results.accessibility >= 95 ? '✅' : '❌'} |
              | Best Practices | ${results['best-practices']} | ≥ 95 | ${results['best-practices'] >= 95 ? '✅' : '❌'} |
              | SEO | ${results.seo} | ≥ 95 | ${results.seo >= 95 ? '✅' : '❌'} |
              
              ${results.performance < 90 || results.accessibility < 95 || results['best-practices'] < 95 || results.seo < 95 ? 
                '⚠️ **Performance regression detected!** Please review the results.' : 
                '✅ **All performance thresholds met!**'}`
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read Lighthouse results:', error);
            }
