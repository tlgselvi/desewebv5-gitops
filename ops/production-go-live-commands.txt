# ===============================================
# EA PLAN v6.5.1 PRODUCTION GO-LIVE (TEK KOMUT)
# Copy-paste ready commands
# ===============================================

# === BASH VERSION (Linux/Mac/WSL) ===
# Tek komut olarak kopyalayƒ±p yapƒ±≈ütƒ±r:

echo "üöÄ EA PLAN v6.5.1 Production Go-Live ba≈ülatƒ±lƒ±yor..." && NAMESPACE="ea-web" && PROD_URL="https://www.cptsystems.com" && TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ) && echo "üîç Health Check..." && kubectl get pods -n $NAMESPACE 2>&1 | head -10 && echo "üîπ CDN cache temizleniyor..." && ([ -n "$CF_API_TOKEN" ] && curl -s -X POST "https://api.cloudflare.com/client/v4/zones/cptsystems.com/purge_cache" -H "Authorization: Bearer $CF_API_TOKEN" -H "Content-Type: application/json" --data '{"purge_everything":true}' > /dev/null && echo "‚úÖ CDN cache temizlendi" || echo "‚ö†Ô∏è CDN token yok, atlanƒ±yor") && echo "üîπ Production Ingress olu≈üturuluyor..." && kubectl apply -f - <<'INGRESS_EOF'
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ea-web-prod
  namespace: ea-web
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: www.cptsystems.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ea-web
            port:
              number: 80
  tls:
  - hosts:
    - www.cptsystems.com
    secretName: tls-cpt-prod
INGRESS_EOF
echo "‚úÖ Ingress olu≈üturuldu" && echo "üîπ ConfigMap g√ºncelleniyor..." && kubectl patch configmap ea-plan-v6-4 -n ea-web --type merge -p '{"data":{"Phase":"production","Version":"v6.5.1","GoLive":"true","Environment":"production","LastUpdated":"'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}}' 2>&1 && echo "‚úÖ ConfigMap g√ºncellendi" && echo "üîπ GitHub senkronizasyonu..." && (gh workflow run docura-publish.yml 2>&1 || echo "‚ö†Ô∏è Docura opsiyonel") && (git -C ~/ea-plan add . 2>&1 && git -C ~/ea-plan commit -m "EA Plan v6.5.1 Production Go-Live $(date -u +%Y-%m-%dT%H:%M:%SZ)" 2>&1 && git -C ~/ea-plan push origin main 2>&1 || echo "‚ö†Ô∏è Git opsiyonel") && echo "üåê Production endpoint kontrol√º: https://www.cptsystems.com" && (sleep 5 && curl -I https://www.cptsystems.com 2>&1 | head -5 || echo "‚ö†Ô∏è Endpoint hen√ºz aktifle≈ümedi") && kubectl get ingress -n ea-web | grep ea-web-prod && echo "‚úÖ EA PLAN v6.5.1 PRODUCTION GO-LIVE TAMAMLANDI ‚Ä¢ ZAMAN: $(date -u +%Y-%m-%dT%H:%M:%SZ)"

# === POWERSHELL VERSION (Windows) ===
# Tek satƒ±r olarak kopyalayƒ±p yapƒ±≈ütƒ±r:

Write-Host "üöÄ EA PLAN v6.5.1 Production Go-Live ba≈ülatƒ±lƒ±yor..." -ForegroundColor Cyan; $NAMESPACE = "ea-web"; $PROD_URL = "https://www.cptsystems.com"; $TIMESTAMP = (Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ"); Write-Host "üîç Health Check..." -ForegroundColor Yellow; kubectl get pods -n $NAMESPACE 2>&1 | Select-Object -First 10; Write-Host "`nüîπ CDN cache temizleniyor..." -ForegroundColor Yellow; if ($env:CF_API_TOKEN) { $headers = @{ "Authorization" = "Bearer $env:CF_API_TOKEN"; "Content-Type" = "application/json" }; try { Invoke-RestMethod -Uri "https://api.cloudflare.com/client/v4/zones/cptsystems.com/purge_cache" -Method Post -Headers $headers -Body '{"purge_everything":true}' | Out-Null; Write-Host "‚úÖ CDN cache temizlendi" -ForegroundColor Green } catch { Write-Host "‚ö†Ô∏è CDN hata: $_" -ForegroundColor Yellow } } else { Write-Host "‚ö†Ô∏è CDN token yok, atlanƒ±yor" -ForegroundColor Yellow }; Write-Host "`nüîπ Production Ingress olu≈üturuluyor..." -ForegroundColor Yellow; $ingressYaml = @"`napiVersion: networking.k8s.io/v1`nkind: Ingress`nmetadata:`n  name: ea-web-prod`n  namespace: $NAMESPACE`n  annotations:`n    kubernetes.io/ingress.class: `"nginx`"`n    cert-manager.io/cluster-issuer: `"letsencrypt-prod`"`nspec:`n  rules:`n  - host: www.cptsystems.com`n    http:`n      paths:`n      - path: /`n        pathType: Prefix`n        backend:`n          service:`n            name: ea-web`n            port:`n              number: 80`n  tls:`n  - hosts:`n    - www.cptsystems.com`n    secretName: tls-cpt-prod`n"@; $ingressYaml | kubectl apply -f - 2>&1 | Out-Null; Write-Host "‚úÖ Ingress olu≈üturuldu" -ForegroundColor Green; Write-Host "`nüîπ ConfigMap g√ºncelleniyor..." -ForegroundColor Yellow; $patchData = '{"data":{"Phase":"production","Version":"v6.5.1","GoLive":"true","Environment":"production","LastUpdated":"' + $TIMESTAMP + '"}}'; kubectl patch configmap ea-plan-v6-4 -n $NAMESPACE --type merge -p $patchData 2>&1 | Out-Null; Write-Host "‚úÖ ConfigMap g√ºncellendi" -ForegroundColor Green; Write-Host "`nüîπ GitHub senkronizasyonu..." -ForegroundColor Yellow; if (Get-Command gh -ErrorAction SilentlyContinue) { gh workflow run docura-publish.yml 2>&1 | Out-Null } else { Write-Host "‚ö†Ô∏è Docura opsiyonel (gh CLI yok)" -ForegroundColor Yellow }; if (Test-Path "$HOME\ea-plan\.git") { Push-Location "$HOME\ea-plan"; git add . 2>&1 | Out-Null; git commit -m "EA Plan v6.5.1 Production Go-Live $TIMESTAMP" 2>&1 | Out-Null; git push origin main 2>&1 | Out-Null; Pop-Location } else { Write-Host "‚ö†Ô∏è Git opsiyonel (repo yok)" -ForegroundColor Yellow }; Write-Host "`nüåê Production endpoint kontrol√º: $PROD_URL" -ForegroundColor Cyan; Start-Sleep -Seconds 5; try { Invoke-WebRequest -Uri $PROD_URL -Method Head -TimeoutSec 10 -ErrorAction SilentlyContinue | Select-Object -First 1; Write-Host "‚úÖ Endpoint eri≈üilebilir" -ForegroundColor Green } catch { Write-Host "‚ö†Ô∏è Endpoint hen√ºz aktifle≈ümedi" -ForegroundColor Yellow }; kubectl get ingress -n $NAMESPACE | Select-String "ea-web-prod"; Write-Host "`n‚úÖ EA PLAN v6.5.1 PRODUCTION GO-LIVE TAMAMLANDI ‚Ä¢ ZAMAN: $TIMESTAMP" -ForegroundColor Green

# === KULLANIM ===
# 1. Yukarƒ±daki komutu kopyala (platformunuza g√∂re)
# 2. Terminal'e yapƒ±≈ütƒ±r
# 3. Enter'a bas

