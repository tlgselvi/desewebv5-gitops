{"version":3,"sources":["turbopack:///[project]/frontend/src/components/aiops/DriftPanel.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\ninterface TelemetryData {\r\n  timestamp: number;\r\n  avgLatency: number;\r\n  drift: boolean;\r\n  metrics: {\r\n    avgLatency: number;\r\n    predictedLatency: number;\r\n    driftPercentage: number;\r\n  };\r\n}\r\n\r\nexport default function DriftPanel() {\r\n  const [drift, setDrift] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState<TelemetryData | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await fetch(\"/api/v1/aiops/collect\");\r\n        const result = await res.json();\r\n        \r\n        if (result.success && result.data) {\r\n          const telemetryData = result.data;\r\n          setData(telemetryData);\r\n          setDrift(telemetryData.drift);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching AIOps data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Initial fetch\r\n    fetchData();\r\n\r\n    // Poll every minute\r\n    const intervalId = setInterval(fetchData, 60000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-4 rounded bg-gray-100 animate-pulse\">\r\n        <h2 className=\"font-bold text-lg\">AIOps Drift Monitor</h2>\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`p-4 rounded ${\r\n        drift ? \"bg-red-200 border-2 border-red-500\" : \"bg-green-200 border-2 border-green-500\"\r\n      }`}\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"font-bold text-lg\">AIOps Drift Monitor</h2>\r\n          <p className={`font-semibold ${drift ? \"text-red-700\" : \"text-green-700\"}`}>\r\n            {drift ? \"⚠️ Drift Detected\" : \"✅ Stable\"}\r\n          </p>\r\n        </div>\r\n        {drift && (\r\n          <span className=\"text-2xl animate-pulse\">⚠️</span>\r\n        )}\r\n      </div>\r\n\r\n      {data && (\r\n        <div className=\"mt-4 space-y-2 text-sm\">\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Avg Latency:</span>\r\n            <span className=\"font-mono\">{data.avgLatency.toFixed(3)}s</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Predicted:</span>\r\n            <span className=\"font-mono\">{data.metrics.predictedLatency.toFixed(3)}s</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-gray-600\">Drift %:</span>\r\n            <span className={`font-mono ${Math.abs(data.metrics.driftPercentage) > 5 ? \"text-red-600\" : \"text-green-600\"}`}>\r\n              {data.metrics.driftPercentage > 0 ? \"+\" : \"\"}\r\n              {data.metrics.driftPercentage.toFixed(2)}%\r\n            </span>\r\n          </div>\r\n          <div className=\"flex justify-between text-xs text-gray-500 mt-2\">\r\n            <span>Last update:</span>\r\n            <span>{new Date(data.timestamp).toLocaleTimeString()}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}